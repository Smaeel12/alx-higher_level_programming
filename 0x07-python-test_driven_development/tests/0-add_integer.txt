The '0-add_integer' module
==========================

Test the function: 'add_integer'
--------------------------------

>>> add_integer = __import__('0-add_integer').add_integer

'Valid arguments'
>>> add_integer(2, 4)
6

>>> add_integer(-3, -4)
-7

>>> add_integer(2)
100

>>> add_integer(93.5, -4)
91

>>> add_integer(2.2)
100

'Invalid arguments'
'String arg'
>>> add_integer(4, "alx")
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer("alx", 4)
Traceback ('most recent call last'):
...
TypeError: a must be an integer

>>> add_integer("alx")
Traceback ('most recent call last'):
...
TypeError: a must be an integer

'Bool arg'
>>> add_integer(4, True)
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer(True)
Traceback ('most recent call last'):
...
TypeError: a must be an integer

'List arg'
>>> add_integer(4, [3, 4])
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer([3, 4])
Traceback ('most recent call last'):
...
TypeError: a must be an integer

'Tuple arg'
>>> add_integer(4, (3, 4))
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer((3, 4))
Traceback ('most recent call last'):
...
TypeError: a must be an integer

'Infinite arg'
>>> add_integer(4, float(inf))
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer(float(inf))
Traceback ('most recent call last'):
...
TypeError: a must be an integer

'Not a number arg'
>>> add_integer(4, float(NaN))
Traceback ('most recent call last'):
...
TypeError: b must be an integer

>>> add_integer(float(NaN))
Traceback ('most recent call last'):
...
TypeError: a must be an integer

>>> import sys
>>> add_integer(sys.float_info.max + 1e292)
Traceback ('most recent call last'):
...
TypeError: a must be an integer
